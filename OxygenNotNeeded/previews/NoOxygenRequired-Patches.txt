[HarmonyPatch(typeof(OxygenBreather), "OnSpawn")]
       public static class OxygenBreather_OnSpawn_Patch
       {
           public static void Postfix(GameObject go)
           {
               KSelectable component = go.GetComponent<KSelectable>();
               component.RemoveStatusItem(Db.Get().DuplicantStatusItems.BreathingO2);
               component.RemoveStatusItem(Db.Get().DuplicantStatusItems.EmittingCO2);
           }
       }

       [HarmonyPatch(typeof(OxygenBreather), "Sim200ms")]
       public static class OxygenBreather_Sim_Patch
       {
           public static bool Prefix()
           {
               return false;
           }
       }

       [HarmonyPatch(typeof(SuffocationMonitor), "InitializeStates")]
       public static class SuffocationMonitor_Patch
       {
           public static bool Prefix(ref StateMachine.BaseState default_state, SuffocationMonitor __instance)
           {
               default_state = (StateMachine.BaseState)__instance.satisfied;
               __instance.root.TagTransition(GameTags.Dead, __instance.dead, false);
               __instance.dead.DoNothing();
               return false;
           }
       }

       [HarmonyPatch(typeof(SuitSuffocationMonitor), "InitializeStates")]
       public static class SuitSuffocationMonitor_Patch
       {
           public static bool Prefix(ref StateMachine.BaseState default_state, SuitSuffocationMonitor __instance)
           {
               default_state = (StateMachine.BaseState)__instance.satisfied;
               return false;
           }
       }
